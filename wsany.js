// Generated by CoffeeScript 1.4.0
(function() {
  var EventEmitter, WebSocket,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  if (require('isnode')) {
    module.exports = WebSocket = require('ws');
  } else {
    EventEmitter = require('eemitterport').EventEmitter;
    module.exports = WebSocket = WebSocket = (function(_super) {

      __extends(WebSocket, _super);

      function WebSocket(a) {
        this.close = __bind(this.close, this);

        this.send = __bind(this.send, this);

        var _this = this;
        this.ws = new window.WebSocket(a);
        this.ws.onopen = function(evt) {
          return _this.emit('open');
        };
        this.ws.onclose = function() {
          return _this.emit('close');
        };
        this.ws.onerror = function(evt) {
          return _this.emit('error', evt.data);
        };
        this.ws.onmessage = function(evt) {
          return _this.emit('message', evt.data);
        };
      }

      WebSocket.prototype.send = function(arg) {
        return this.ws.send(arg);
      };

      WebSocket.prototype.close = function() {
        return this.ws.close();
      };

      return WebSocket;

    })(EventEmitter);
  }

}).call(this);
